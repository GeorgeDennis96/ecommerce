@page "/products"

@inject HttpClient Http
@inject IProductService ProductService

@if (ProductService.Products == null || ProductService.Products.Count == 0)
{
    <div class="col-12 container product-load-notification">
        <div class="row-12"></div>
        <div class="spinner-border text-light" role="status">
            <span class="sr-only">Loading...</span>
        </div>
        <div class="row-12">
            <span>Loading Products...</span>
        </div>
    </div>
}
else
{
    <ul class="list-unstyled">
        @foreach (var product in ProductService.Products)
        {
            <div class="card product-card">
                <div class="card-body product-card-body">
                    <li class="media my-2">
                        <div class="media-img-wrapper mr-2">
                            <a href="/product/@product.Id">
                                <img class="media-img" src="@product.ImageUrl" alt="@product.Title">
                            </a>
                        </div>
                        <div class="media-body">
                            <a href="/product/@product.Id">
                                <h4 class="mb-0">@product.Title</h4>
                            </a>
                            <p style="margin-top: 1rem;">
                                @product.Description
                            </p>
                            <h5 class="price">
                                £@product.Price
                            </h5>
                        </div>
                    </li>
                </div>
            </div>
        }
    </ul>
}

@code {

    private bool response;

    protected override async Task OnInitializedAsync()
    {
        response = await ProductService.GetProducts();

        Console.WriteLine("THE RESPONSE: "+response.ToString());
    }
}
